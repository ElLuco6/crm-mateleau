name: CI/CD Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mateleau-crm-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: "npm"
          cache-dependency-path: mateleau-crm-frontend/package-lock.json
      - uses: browser-actions/setup-chrome@v1

      - name: Install deps
        run: npm ci
      - name: Security audit (frontend)
        run: npm audit --audit-level=high

      - name: Run tests with coverage
        env: { CHROME_BIN: google-chrome }
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Check LCOV
        run: |
          set -e
          L=$(find coverage -name lcov.info -print -quit)
          echo "LCOV=$L"
          wc -c "$L"
          # Montre quelques sources référencées :
          grep -m3 '^SF:' "$L" || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend
          path: mateleau-crm-frontend/coverage/**/lcov.info

  sonar-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mateleau-crm-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-frontend
          path: mateleau-crm-frontend/coverage 

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          echo "$PWD/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: SonarCloud scan (frontend + push)
        if: ${{ github.event_name == 'push' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          REPORT=$(find coverage -name lcov.info -print -quit)
          echo "Using coverage: $REPORT"

          sonar-scanner \
            -Dsonar.projectKey=ElLuco6_crm-mateleau \
            -Dsonar.organization=elluco6 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/*.spec.ts,**/*.stories.ts \
            -Dsonar.javascript.lcov.reportPaths="$REPORT" \
            -Dsonar.typescript.lcov.reportPaths="$REPORT" \
            -Dsonar.branch.name=master \
            -Dsonar.scm.revision=${{ github.sha }} \
            -Dsonar.automaticAnalysis=false \
            -Dsonar.login=$SONAR_TOKEN

      - name: SonarCloud scan (frontend - PR)
        if: ${{ github.event_name == 'pull_request' }}
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          REPORT=$(find coverage -name lcov.info -print -quit)
          sonar-scanner \
            -Dsonar.organization=elluco6 \
            -Dsonar.projectKey=ElLuco6_crm-mateleau \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/*.spec.ts,**/*.stories.ts \
            -Dsonar.javascript.lcov.reportPaths="$REPORT" \
            -Dsonar.typescript.lcov.reportPaths="$REPORT" \
            -Dsonar.pullrequest.key='${{ github.event.number }}' \
            -Dsonar.pullrequest.branch='${{ github.head_ref }}' \
            -Dsonar.pullrequest.base='${{ github.base_ref }}' \
            -Dsonar.automaticAnalysis=false

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mateleau-crm-backend
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: "npm"
          cache-dependency-path: mateleau-crm-backend/package-lock.json

      - name: Install deps (backend)
        run: npm ci
      - name: Security audit (backend)
        run: npm audit --audit-level=high


      - name: Run backend tests (with coverage)
        run: npm test -- --coverage --runInBand

      - name: Check LCOV
        run: |
           echo "PWD=$(pwd)"
            ls -R coverage || true
            test -f coverage/lcov.info
            wc -c coverage/lcov.info

      - name: Upload coverage artifact (backend)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backend
          path: mateleau-crm-backend/coverage/lcov.info
          if-no-files-found: error

  sonar-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mateleau-crm-backend
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage (backend)
        uses: actions/download-artifact@v4
        with:
          name: coverage-backend
          path:  mateleau-crm-backend/coverage 
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          echo "$PWD/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH
      - name: SonarCloud scan (backend + push)
        if: ${{ github.event_name == 'push' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          BASE="${{ github.workspace }}/mateleau-crm-backend"
          REPORT="$BASE/coverage/lcov.info"
          echo "BASE=$BASE"
          test -f "$REPORT" || (echo "Missing $REPORT" && exit 1)
          wc -c "$REPORT" || true
          echo "Using coverage: $REPORT"
          sonar-scanner \
            -Dsonar.projectKey=crm-mateleau-backend \
            -Dsonar.organization=elluco6 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectBaseDir="$BASE" \
            -Dsonar.sources=src \
            -Dsonar.inclusions='src/**/*.ts' \
            -Dsonar.exclusions='src/routes/**/*.ts,src/app.ts,**/node_modules/**,**/dist/**,**/coverage/**,**/lcov-report/**,**/*.spec.ts,**/*.test.ts,**/*.d.ts' \
            -Dsonar.security.exclusions='src/app.ts,src/swagger.ts,src/routes/**/*.ts \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions='**/*.spec.ts,**/*.test.ts' \
            -Dsonar.typescript.tsconfigPath=tsconfig.json \
            -Dsonar.typescript.lcov.reportPaths="$REPORT" \
            -Dsonar.javascript.lcov.reportPaths="$REPORT" \
            -Dsonar.javascript.security.hotspot.enabled=false \
            -Dsonar.branch.name=master \
            -Dsonar.scm.revision='${{ github.sha }}' \
            -Dsonar.projectVersion='${{ github.run_number }}' \
            -Dsonar.automaticAnalysis=false \
            -Dsonar.token='${{ secrets.SONAR_TOKEN }}'
      

      - name: SonarCloud scan (backend - PR)
        if: ${{ github.event_name == 'pull_request' }}
        env: ${{ secrets.SONAR_TOKEN }}
        run: |    
         BASE="${{ github.workspace }}/mateleau-crm-backend"
         REPORT="$BASE/coverage/lcov.info"
         echo "BASE=$BASE"
         test -f "$REPORT" || (echo "Missing $REPORT" && exit 1)
         wc -c "$REPORT" || true
         echo "Using coverage: $REPORT"
         sonar-scanner \
            -Dsonar.projectKey=crm-mateleau-backend \
            -Dsonar.organization=elluco6 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectBaseDir="$BASE" \
            -Dsonar.sources=src \
            -Dsonar.inclusions='src/**/*.ts' \
            -Dsonar.exclusions='src/routes/**/*.ts,src/app.ts,**/node_modules/**,**/dist/**,**/coverage/**,**/lcov-report/**,**/*.spec.ts,**/*.test.ts,**/*.d.ts' \
            -Dsonar.security.exclusions='src/app.ts,src/swagger.ts,src/routes/**/*.ts,src/controllers/**/*.ts' \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions='**/*.spec.ts,**/*.test.ts' \
            -Dsonar.typescript.tsconfigPath=tsconfig.json \
            -Dsonar.typescript.lcov.reportPaths="$REPORT" \
            -Dsonar.javascript.lcov.reportPaths="$REPORT" \
            -Dsonar.javascript.security.hotspot.enabled=false \
            -Dsonar.pullrequest.key='${{ github.event.number }}' \
            -Dsonar.pullrequest.branch='${{ github.head_ref }}' \
            -Dsonar.pullrequest.base='${{ github.base_ref }}' \
            -Dsonar.scm.revision='${{ github.sha }}' \
            -Dsonar.projectVersion='${{ github.run_number }}' \
            -Dsonar.automaticAnalysis=false \
            -Dsonar.token="$SONAR_TOKEN"        

  release-changelog:
    needs: [sonar-frontend, sonar-backend]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Generate changelog & version bump
        run: |
          npx standard-version

      - name: Push changelog and new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --follow-tags origin master
